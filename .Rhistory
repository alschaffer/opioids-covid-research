mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
cat = coalesce(age_group, sex, region, imd, ethnicity6),
var = gsub("opioid_any_", "", measure),
var = gsub("opioid_new_", "", var),
measure = substr(measure,1,10)) %>%
dplyr::select(c(measure, month, cat, var, numerator, denominator)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
View(demo)
# For running locally only #
#setwd("C:/Users/aschaffer/OneDrive - Nexus365/Documents/GitHub/opioids-covid-research")
#getwd()
# Import libraries #
library('tidyverse')
library('lubridate')
library('arrow')
library('here')
library('reshape2')
library('dplyr')
library('fs')
# Create directory
dir_create(here::here("output", "timeseries"), showWarnings = FALSE, recurse = TRUE)
dir_create(here::here("output", "measures"), showWarnings = FALSE, recurse = TRUE)
# Custom functions
source(here("analysis", "lib", "custom_functions.R"))
###############################
# Clean up measures datasets  #
###############################
# Overall counts
overall <- read_csv(here::here("output", "measures", "measures_overall.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown"))) %>%
dplyr::select(!c(interval_start, interval_end, ratio)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
hi_opioid_any = numerator_hi_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
dplyr::select(!c(denominator_hi_opioid_any)) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
pcent_hi = hi_opioid_any / opioid_any,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_hi_opioid_any = (hi_opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
write.csv(overall, file = here::here("output", "timeseries", "ts_overall.csv"),
row.names = FALSE)
# Overall counts - without cancer
overall_noca <- read_csv(here::here("output", "measures", "measures_overall_nocancer.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown"))) %>%
dplyr::select(!c(interval_start, interval_end, ratio)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
hi_opioid_any = numerator_hi_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
dplyr::select(!c(denominator_hi_opioid_any)) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
pcent_hi = hi_opioid_any / opioid_any,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_hi_opioid_any = (hi_opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
write.csv(overall_noca, file = here::here("output", "timeseries", "ts_overall_nocancer.csv"),
row.names = FALSE)
# By demographics
demo <- read_csv(here::here("output", "measures", "measures_demo.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
cat = coalesce(age_group, sex, region, imd, ethnicity6),
var = gsub("opioid_any_", "", measure),
var = gsub("opioid_new_", "", var),
measure = substr(measure,1,10)) %>%
dplyr::select(c(measure, month, cat, var, numerator, denominator)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
write.csv(demo, file = here::here("output", "timeseries", "ts_demo.csv"),
row.names = FALSE)
# By demographics - without cancer
demo_noca <- read_csv(here::here("output", "measures", "measures_demo_nocancer.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
cat = coalesce(age_group, sex, region, imd, ethnicity6),
var = gsub("opioid_any_", "", measure),
var = gsub("opioid_new_", "", var),
measure = substr(measure,1,10)) %>%
dplyr::select(c(measure, month, cat, var, numerator, denominator)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
write.csv(demo_noca, file = here::here("output", "timeseries", "ts_demo_nocancer.csv"),
row.names = FALSE)
# By admin route
type <- read_csv(here::here("output", "measures", "measures_type.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
measure = case_when(
measure == "par_opioid" ~ "Parenteral",
measure == "buc_opioid" ~ "Buccal",
measure == "oral_opioid" ~ "Oral",
measure == "trans_opioid" ~ "Transdermal",
measure == "rec_opioid" ~ "Rectal",
measure == "oth_opioid" ~ "Other",
measure == "inh_opioid" ~ "Inhaled"
),
rate_opioid_any = (numerator / denominator * 1000)) %>%
rename(opioid_any = numerator, pop_total = denominator) %>%
dplyr::select(!c(interval_start, interval_end, ratio))
write.csv(type, file = here::here("output", "timeseries", "ts_type.csv"),
row.names = FALSE)
# By admin route - without cancer
type_noca <- read_csv(here::here("output", "measures", "measures_type_nocancer.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
measure = case_when(
measure == "par_opioid" ~ "Parenteral",
measure == "buc_opioid" ~ "Buccal",
measure == "oral_opioid" ~ "Oral",
measure == "trans_opioid" ~ "Transdermal",
measure == "rec_opioid" ~ "Rectal",
measure == "oth_opioid" ~ "Other",
measure == "inh_opioid" ~ "Inhaled"
),
rate_opioid_any = (numerator / denominator * 1000)) %>%
rename(opioid_any = numerator, pop_total = denominator) %>%
dplyr::select(!c(interval_start, interval_end, ratio))
write.csv(type_noca, file = here::here("output", "timeseries", "ts_type_nocancer.csv"),
row.names = FALSE)
# In carehome
carehome <- read_csv(here::here("output", "measures", "measures_carehome.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown"))) %>%
dplyr::select(!c(interval_start, interval_end, ratio)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
hi_opioid_any = numerator_hi_opioid_any,
opioid_new = numerator_opioid_new,
oral_opioid_any = numerator_oral_opioid,
trans_opioid_any = numerator_trans_opioid,
par_opioid_any = numerator_par_opioid,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
dplyr::select(!c(denominator_hi_opioid_any, denominator_oral_opioid,
denominator_trans_opioid, denominator_par_opioid)) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
pcent_hi = hi_opioid_any / opioid_any,
pcent_par = par_opioid_any / opioid_any,
pcent_trans = trans_opioid_any / opioid_any,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_hi_opioid_any = (hi_opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_total * 1000),
rate_oral_opioid_any = (oral_opioid_any / pop_total * 1000),
rate_trans_opioid_any = (trans_opioid_any / pop_total * 1000),
rate_par_opioid_any = (par_opioid_any / pop_total * 1000))
write.csv(carehome, file = here::here("output", "timeseries", "ts_carehome.csv"),
row.names = FALSE)
# In/not in carehome - sensitivity analysis
carehome_sens <- read_csv(here::here("output", "measures", "measures_carehome_sens.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
carehome = if_else(carehome == T, "Yes", "No", "No"),
rate_opioid_any = (numerator / denominator * 1000)) %>%
rename(opioid_any = numerator, pop_total = denominator) %>%
dplyr::select(!c(interval_start, interval_end, ratio, measure))
write.csv(carehome_sens, file = here::here("output", "timeseries", "ts_carehome_sens.csv"),
row.names = FALSE)
# For running locally only #
#setwd("C:/Users/aschaffer/OneDrive - Nexus365/Documents/GitHub/opioids-covid-research")
#getwd()
# Import libraries #
library('tidyverse')
library('lubridate')
library('arrow')
library('here')
library('reshape2')
library('dplyr')
library('fs')
# Create directory
dir_create(here::here("output", "timeseries"), showWarnings = FALSE, recurse = TRUE)
dir_create(here::here("output", "measures"), showWarnings = FALSE, recurse = TRUE)
# Rounding and redaction
rounding <- function(vars) {
case_when(vars > 5 ~ round(vars / 7) * 7)
}
## Calculate rates
# Overall
overall_round <- read_csv(here::here("output", "timeseries", "ts_overall.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
hi_opioid_any_round = rounding(hi_opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_hi_opioid_any_round = (hi_opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(overall_round, here::here("output", "timeseries", "ts_overall_rounded.csv"),
row.names = FALSE)
overall_nocancer_round <- read_csv(here::here("output", "timeseries", "ts_overall_nocancer.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
hi_opioid_any_round = rounding(hi_opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_hi_opioid_any_round = (hi_opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(overall_nocancer_round, here::here("output", "timeseries", "ts_overall_nocancer_rounded.csv"))
# By demographics
demo_round <- read_csv(here::here("output", "timeseries", "ts_demo.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
hi_opioid_any_round = rounding(hi_opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_hi_opioid_any_round = (hi_opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
demo_round <- read_csv(here::here("output", "timeseries", "ts_demo.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(demo_round, here::here("output", "timeseries", "ts_demo_rounded.csv"))
demo_nocancer_round <- read_csv(here::here("output", "timeseries", "ts_demo_nocancer.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(demo_nocancer_round, here::here("output", "timeseries", "ts_demo_nocancer_rounded.csv"))
#######################################################
# For running locally only #
#setwd("C:/Users/aschaffer/OneDrive - Nexus365/Documents/GitHub/opioids-covid-research")
#getwd()
# Import libraries #
library('tidyverse')
library('lubridate')
library('arrow')
library('here')
library('reshape2')
library('dplyr')
library('fs')
# Create directory
dir_create(here::here("output", "timeseries"), showWarnings = FALSE, recurse = TRUE)
dir_create(here::here("output", "measures"), showWarnings = FALSE, recurse = TRUE)
# Rounding and redaction
rounding <- function(vars) {
case_when(vars > 5 ~ round(vars / 7) * 7)
}
## Calculate rates
# Overall
overall_round <- read_csv(here::here("output", "timeseries", "ts_overall.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
hi_opioid_any_round = rounding(hi_opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_hi_opioid_any_round = (hi_opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(overall_round, here::here("output", "timeseries", "ts_overall_rounded.csv"),
row.names = FALSE)
overall_nocancer_round <- read_csv(here::here("output", "timeseries", "ts_overall_nocancer.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
hi_opioid_any_round = rounding(hi_opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_hi_opioid_any_round = (hi_opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(overall_nocancer_round, here::here("output", "timeseries", "ts_overall_nocancer_rounded.csv"))
# By demographics
demo_round <- read_csv(here::here("output", "timeseries", "ts_demo.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(demo_round, here::here("output", "timeseries", "ts_demo_rounded.csv"))
demo_nocancer_round <- read_csv(here::here("output", "timeseries", "ts_demo_nocancer.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
opioid_new_round = rounding(opioid_new),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000))
write.csv(demo_nocancer_round, here::here("output", "timeseries", "ts_demo_nocancer_rounded.csv"))
# By admin route
type_round <- read_csv(here::here("output", "timeseries", "ts_type.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
pop_total_round = rounding(pop_total),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000))
write.csv(type_round, here::here("output", "timeseries", "ts_type_rounded.csv"))
type_nocancer_round <- read_csv(here::here("output", "timeseries", "ts_type_nocancer.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
pop_total_round = rounding(pop_total),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000))
write.csv(type_nocancer_round, here::here("output", "timeseries", "ts_type_nocancer_rounded.csv"))
# IN care home
carehome_round <- read_csv(here::here("output", "timeseries", "ts_carehome.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
hi_opioid_any_round = rounding(hi_opioid_any),
opioid_new_round = rounding(opioid_new),
trans_opioid_any_round = rounding(trans_opioid_any),
par_opioid_any_round = rounding(par_opioid_any),
oral_opioid_any_round = rounding(oral_opioid_any),
pop_total_round = rounding(pop_total),
pop_naive_round = rounding(pop_naive),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000),
rate_hi_opioid_any_round = (hi_opioid_any_round / pop_total_round * 1000),
rate_opioid_new_round = (opioid_new_round / pop_naive_round * 1000),
rate_trans_opioid_any_round = (trans_opioid_any_round / pop_total_round * 1000),
rate_par_opioid_any_round = (par_opioid_any_round / pop_total_round * 1000),
rate_oral_opioid_any_round = (oral_opioid_any_round / pop_total_round * 1000))
write.csv(carehome_round, here::here("output", "timeseries", "ts_carehome_rounded.csv"))
# By care home (sensitivity analysis)
carehome_sens_round <- read_csv(here::here("output", "timeseries", "ts_carehome_sens.csv")) %>%
mutate(opioid_any_round = rounding(opioid_any),
pop_total_round = rounding(pop_total),
rate_opioid_any_round = (opioid_any_round / pop_total_round * 1000))
write.csv(carehome_sens_round, here::here("output", "timeseries", "ts_carehome_sens_rounded.csv"))
any_demo <- read_csv(here::here("output", "timeseries", "ts_demo.csv")) %>%
group_by(var, cat) %>%
med_iqr( opioid_any, "Opioid prescribing prevalence")
any_demo <- read_csv(here::here("output", "timeseries", "ts_demo.csv")) %>%
group_by(var, cat, period) %>%
med_iqr( opioid_any, "Opioid prescribing prevalence")
View(ts_demo)
any_demo <- read_csv(here::here("output", "timeseries", "ts_demo.csv"))
View(any_demo)
View(demo)
# By demographics
demo <- read_csv(here::here("output", "measures", "measures_demo.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
cat = coalesce(age_group, sex, region, imd, ethnicity6),
var = gsub("opioid_any_", "", measure),
var = gsub("opioid_new_", "", var),
measure = substr(measure,1,10)) %>%
dplyr::select(c(measure, month, cat, var, numerator, denominator, period)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
write.csv(demo, file = here::here("output", "timeseries", "ts_demo.csv"),
row.names = FALSE)
# By demographics - without cancer
demo_noca <- read_csv(here::here("output", "measures", "measures_demo_nocancer.csv")) %>%
mutate(month = as.Date(interval_start, format="%Y-%m-%d"),
period = ifelse(month < as.Date("2020-03-01"), "Pre-COVID",
ifelse(month >= as.Date("2021-04-01"), "Recovery", "Lockdown")),
cat = coalesce(age_group, sex, region, imd, ethnicity6),
var = gsub("opioid_any_", "", measure),
var = gsub("opioid_new_", "", var),
measure = substr(measure,1,10)) %>%
dplyr::select(c(measure, month, cat, var, numerator, denominator, period)) %>%
pivot_wider(names_from = measure, values_from = c(numerator, denominator)) %>%
rename(opioid_any = numerator_opioid_any,
opioid_new = numerator_opioid_new,
pop_total = denominator_opioid_any,
pop_naive = denominator_opioid_new) %>%
mutate(pcent_new = opioid_new / opioid_any * 100,
rate_opioid_any = (opioid_any / pop_total * 1000),
rate_opioid_new = (opioid_new / pop_naive * 1000))
write.csv(demo_noca, file = here::here("output", "timeseries", "ts_demo_nocancer.csv"),
row.names = FALSE)
any_demo <- read_csv(here::here("output", "timeseries", "ts_demo.csv")) %>%
group_by(var, cat, period) %>%
med_iqr( opioid_any, "Opioid prescribing prevalence")
View(any_demo)
library("colorblindcheck")
mycolors <- c(
`green`= "#FFD23B",
`light green`= "#FFB700",
`dark green` = "#FF7C00",
`blue` = "#F20D52",
`light blue` = "#FF369C",
`dark blue` = "#FF7CFE",
`yellowgreen` = "#9C54E6",
`light yellowgreen` = "#5323B3",
`dark yellowgreen` = "#5A71F3",
`red` = "#3FB5FF",
`light red` = "#17D7E6")
show_col(mycolors)
library(ggpubr)
library(scales)
mycolors <- c(
`green`= "#FFD23B",
`light green`= "#FFB700",
`dark green` = "#FF7C00",
`blue` = "#F20D52",
`light blue` = "#FF369C",
`dark blue` = "#FF7CFE",
`yellowgreen` = "#9C54E6",
`light yellowgreen` = "#5323B3",
`dark yellowgreen` = "#5A71F3",
`red` = "#3FB5FF",
`light red` = "#17D7E6")
show_col(mycolors)
?show_col
seecol(my_colors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
install.packages("unikn")
library(scales)
library(unikn)
seecol(my_colors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
mycolors <- c("#FFD23B",
"#FFB700",
"#FF7C00",
`"#F20D52",
"#FF369C",
"#FF7CFE",
"#9C54E6",
"#5323B3",
"#5A71F3",
"#3FB5FF",
"#17D7E6")
show_col(mycolors)
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
mycolors <- c("#FFD23B",
"#FFB700",
"#FF7C00",
"#F20D52",
"#FF369C",
"#FF7CFE",
"#9C54E6",
"#5323B3",
"#5A71F3",
"#3FB5FF",
"#17D7E6")
show_col(mycolors)
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
mycolors <- c("#FFD23B",
"#FFB700",
"#FF7C00",
"#F20D52",
"#FF369C",
"#FF7CFE",
"#9C54E6",
"#5323B3",
"#5A71F3",
"#3FB5FF",
"#17D7E6")
show_col(mycolors)
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
mycolors <- c("#FFD23B","#FFB700","#FF7C00","#F20D52","#FF369C","#FF7CFE","#9C54E6","#5323B3","#5A71F3","#3FB5FF","#17D7E6")
show_col(mycolors)
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
mycolors <- c("#FFD23B","#FFB700","#FF7C00","#F20D52","#FF369C","#FF7CFE","#9C54E6","#5323B3","#5A71F3","#3FB5FF","#17D7E6")
show_col(mycolors)
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
mycolors <- c("#FFD23B","#FFB700","#FF7C00","#F20D52","#FF369C","#FF7CFE","#9C54E6","#5323B3","#5A71F3","#3FB5FF","#17D7E6")
show_col(mycolors)
seecol(mycolors,
col_brd = "black", lwd_brd = 2,
title = "See the colors, HEX codes, and RGB values of my_pal")
seecol(mycolors,
col_brd = "black", lwd_brd = 2)
